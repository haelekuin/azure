# 10-input-azure.conf
filter {
  # Netflow logs are stored in a heavily nested JSON. This split breaks up all the arrays to allow parsing individual log events
  # https://learn.microsoft.com/en-us/azure/network-watcher/vnet-flow-logs-overview
  if "netflow" in [tags] {
  json {
    source => "message"
  }
    split { field => "[records]" }
    split { field => "[records][flowRecords][flows]"}
    split { field => "[records][flowRecords][flows][flowGroups]"}
    split { field => "[records][flowRecords][flows][flowGroups][flowTuples]"}
  }
}

# 50-azure-netflow.conf
filter {
  if "netflow" in [tags] {
    grok {
      match => {
        "[records][flowRecords][flows][flowGroups][flowTuples]" => "%{NUMBER:[flow][start]},%{IP:[source][ip]},%{IP:[destination][ip]},%{NUMBER:[source][port]},%{NUMBER:[destination][port]},%{NUMBER:[network][iana_number]},%{WORD:[network][direction]},%{WORD:[azure][network][flow_state]},%{WORD:[azure][network][encryption_status]},%{NUMBER:[source][packets]},%{NUMBER:[source][bytes]},%{NUMBER:[destination][packets]},%{NUMBER:[destination][bytes]}"
      }
    }

    mutate {
      rename => {
        "[records][macAdress]" => "[host][macAdress]",
        "[records][category]" => "[cloud][service][name]",
        "[records][flowLogGUID]" => "[cloud][instance][id]",
        "[records][flowRecords][flows][flowGroups][rule]" => "[rule][name]",
        "[records][flowRecords][flows][aclID]" => "[rule][id]"
      }
    }

    mutate {
      remove_field => [
      [
        "[records][operationName]",
        "[records][flowLogResourceID]",
        "[records][flowLogVersion]",
        "[records][targetsResourceId]"]
      ]
    }
  
    translate {
      field => "[network][direction]"
      destination => "[network][direction]"
      dictionary => {
        "O" => "outbound"
        "I" => "inbound"
      }
    }
  
    translate {
      field => "[network][iana_number]"
      destination => "[network][transport]"
      dictionary => {
        "6" => "tcp"
        "17" => "udp"
        "1" => "icmp"
      }
    }
  
    date {
      match => ["[records][time]", "UNIX_MS"]
      target => "@timestamp"
    }
  }
}
